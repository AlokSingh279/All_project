package com.mydp.fourthVideo;

public class Minimum_Falling_Path_Sum_II {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[][] grid = { { 1, 2, 3 }, { 4, 5, 6 }, { 7, 8, 9 } };
		int sum = Integer.MAX_VALUE;
		for (int i = 0; i < grid[0].length; i++) {
			sum = Math.min(sum, minFallingPathSum(grid, 0, i));
		}
		System.out.println(sum);

	}

	public static int minFallingPathSum(int[][] grid, int i, int col) {

		if (col < 0 || col >= grid[0].length) {
			return Integer.MAX_VALUE;
		}

		if (i == grid.length - 1) {
			return grid[i][col];
		}

		int sum = Integer.MAX_VALUE;
		for (int j = 0; j < grid[0].length; j++) {
			sum = Math.min(sum, minFallingPathSum(grid, i + 1, j));
		}
		return grid[i][col] + sum;
	}

}
