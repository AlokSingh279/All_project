package com.mydp.fourthVideo;

import java.util.Arrays;

public class Minimum_Path_Sum {

	public static void main(String[] args) {
		int[][] grid = { { 1, 3, 1 }, { 1, 5, 1 }, { 4, 2, 1 } };
		int[][] dp = new int[grid.length][grid[0].length];

		for (int[] a : dp) {
			Arrays.fill(a, -1);
		}
		System.out.println(minPathSummm(grid, 0, 0));

	}

	public static int minPathSummm(int[][] grid, int i, int j) {

		if (j >= grid[0].length) {
			return Integer.MAX_VALUE;
		}

		if (i == grid.length - 1) {
			return grid[i][j];
		}

		int v = minPathSummm(grid, i + 1, j);
		int h = minPathSummm(grid, i, j + 1);

		return grid[i][j] + Math.min(v, h);
	}
}
